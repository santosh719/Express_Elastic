{
  "title": "Singleton example[edit]",
  "content": "As an example, we can show a thread-safe version of a singleton:Code listing 1: Singleton.java\n\n\n 1 /**\n 2  * The singleton class that can be instantiated only once with lazy instantiation\n 3  */\n 4 public class Singleton {\n 5     /** Static class instance */\n 6     private volatile static Singleton instance = null;\n 7 \n 8     /**\n 9      * Standard private constructor\n10      */\n11     private Singleton() {\n12         // Some initialisation\n13     }\n14    \n15     /**\n16      * Getter of the singleton instance\n17      * @return The only instance\n18      */\n19     public static Singleton getInstance() {\n20         if (instance == null) {\n21             // If the instance does not exist, go in time-consuming\n22             // section:\n23             synchronized (Singleton.class) {\n24                 if (instance == null) {\n25                     instance = new Singleton();\n26                 }\n27             }\n28         }\n29 \n30         return instance;\n31     }\n32  }"
}