{
  "title": "To do:",
  "content": "Navigate Javadoc & Annotations topic: (vde)\n\n Javadoc\n Introduction to Annotation\n Creating custom annotations\n Meta-annotations\n Helping the compilerAnnotations can be used by the compiler to carry out certain directives. Much that you'd love programming in Java, you probably would have been fussed about compiler warnings. Compiler warnings are not necessarily errors but are warnings that tell you the code might malfunction because of some reason.Taming the compiler[edit]You can issue directive to the compiler in the shape of three pre-defined annotation to tell it what sort of pre-processing a certain bit of code requires. The three annotations are:@Deprecated\n@Override\n@SuppressWarnings(..)@Deprecated is used to flag that a method or class should no longer be used, normally because a better alternative exists. Compilers and IDEs typically raise a warning if deprecated code is invoked from non deprecated code. [1]@Override flags that a method overrides a method in a superclass. If there is no overridden method, a compile error should occur. [2]@SuppressWarnings(..) SuppressWarnings tells the compiler not to report on some, or all, types of warnings. It can be applied to a type, a method or a variable. [3]"
}