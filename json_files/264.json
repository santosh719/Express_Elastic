{
  "title": "Methods[edit]",
  "content": "ArrayList defines following methods:Adding Element in ArrayList[edit]Inserts the specified element at the specified position index in this list. Throws IndexOutOfBoundsException if the specified index is out of range (index < 0 || index >= size()).void add(int index, Object element)Appends the specified element to the end of this list.boolean add(Object o)Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator. Throws NullPointerException if the specified collection is null.boolean addAll(Collection c)Inserts all of the elements in the specified collection into this list, starting at the specified position. Throws NullPointerException if the specified collection is null.boolean addAll(int index, Collection c)Size of ArrayList[edit]Returns the number of elements in this list.int size()Adding Element and Size of ArrayListimport java.util.*;\n\npublic class ArrayListDemo{\n\tpublic static void main(String[] args) {\n\t\t// create an array list\n\t\tArrayList al= new ArrayList();\n\t\tSystem.out.println(\"Initial ArrayList : \"+al);\n\t\t\n\t\t // add elements to the array list\n\t\tal.add(\"A\");\n\t\tal.add(\"B\");\n\t\t\n\t\t//find size of ArrayList\n\t\tSystem.out.println(\"Size of al :\"+al.size());\n\t\t// display the array list\n\t\tSystem.out.println(\"Contents of al :\"+al);\n\t\tal.add(1,\"C\");\n\t\tSystem.out.println(\"Contents of al :\"+al);\n\t\tSystem.out.println(\"Size of al :\"+al.size());\n\t}\n}Output for Adding Element and Size of ArrayListInitial ArrayList : []\nSize of al :2\nContents of al :[A, B]\nContents of al :[A, C, B]\nSize of al :3Get and Set ArrayList Element[edit]Returns the element at the specified position in this list. Throws IndexOutOfBoundsException if the specified index is is out of range (index < 0 or index >= size()).Object get(int index)Replaces the element at the specified position in this list with the specified element. Throws IndexOutOfBoundsException if the specified index is is out of range (index < 0 or index >= size()).Object set(int index, Object element)Find Index of ArrayList Element[edit]Returns the index in this list of the first occurrence of the specified element, or -1 if the List does not contain this element.int indexOf(Object o)Returns the index in this list of the last occurrence of the specified element, or -1 if the list does not contain this element.int lastIndexOf(Object o)Find Element Contain in ArrayList[edit]Returns true if this list contains the specified element. More formally, returns true if and only if this list contains at least one element e such that (o==null? e==null: o.equals(e)).boolean contains(Object o)Different Method in ArrayListpublic class ArrayListDemo {\n\tpublic static void main(String[] args) {\n\t\t// create an array list\n\t\tArrayList al = new ArrayList();\n\n\t\t// add elements to the array list\n\t\tal.add(\"A\");\n\t\tal.add(\"B\");\n\t\tal.add(\"C\");\n\t\tal.add(\"A\");\n\t\tal.add(\"D\");\n\t\tal.add(\"A\");\n\t\tal.add(\"E\");\n\t\tSystem.out.println(\"Contents of al : \" + al);\n\n\t\t// find index of element in ArrayList\n\t\tSystem.out.println(\"Index of D : \" + al.indexOf(\"D\"));\n\t\tSystem.out.println(\"Index of A : \" + al.indexOf(\"A\"));\n\n\t\t// find index of element in ArrayList\n\t\tSystem.out.println(\"Index of A : \" + al.lastIndexOf(\"A\"));\n\n\t\t// get element at given Index\n\t\tSystem.out.println(\"Element at Second Index : \" + al.get(2));\n\t\tSystem.out.println(\"Element at Sixth Index : \" + al.get(6));\n\t\t\n\t\t//set element at given Index\n\t\tal.set(3,\"B\"); // replacing third index element by \"B\"\n\t\tSystem.out.println(\"Contents of al : \" + al);\n\t\t\n\t\t//check ArrayList contains given element\n\t\tSystem.out.println(\"ArrayList contain D : \"+al.contains(\"D\"));\n\t\tSystem.out.println(\"ArrayList contain F : \"+al.contains(\"F\"));\n\t}\n}Output for Different Method in ArrayListContents of al : [A, B, C, A, D, A, E]\nIndex of D : 4\nIndex of A : 0\nIndex of A : 5\nElement at Second Index : C\nElement at Sixth Index : E\nContents of al : [A, B, C, B, D, A, E]\nArrayList contain D : true\nArrayList contain F : falseTest your knowledge\n\nQuestion: Consider the following code:\n\n\n\n\n\n\npublic class ArrayListDemo {\n\t\tpublic static void main(String[] args) {\n\t\n\t\tArrayList al = new ArrayList();\n\n\t\tal.add(\"A\");\n\t\tal.add(\"B\");\n\t\tal.add(\"C\");\n\t\tal.add(\"E\");\n\t\tal.add(\"F\");\n\t\n\t\tal.remove(2);\n\t\tal.remove(\"F\");\n\t\t\n\t\tal.set(1, \"G\");\n\t\tal.add(\"H\");\n\t\tal.set(3, \"I\");\n\t\tSystem.out.println(\"Size of al : \" + al.size());\n\t\tSystem.out.println(\"Contents of al : \" + al);\n\n\t}\n  }\n\n\n\n\n\nIn the example above, what is output?\n\nAnswer\n\n\n\n\n\n\nSize of al : 4\nContents of al : [A, G, E, I]Some more ArrayList methods:Method\nDescription\n\n\nObject clone()\nReturns a shallow copy of this ArrayList.\n\n\nObject[] toArray()\nReturns an array containing all of the elements in this list in the correct order. Throws NullPointerException if the specified array is null.\n\n\nvoid trimToSize()\nTrims the capacity of this ArrayList instance to be the list's current size.\n\n\nvoid ensureCapacity(int minCapacity)\nIncreases the capacity of this ArrayList instance, if necessary, to ensure that it can hold at least the number of elements specified by the minimum capacity argument.\n\n\nprotected void removeRange(int fromIndex, int toIndex)\nRemoves from this List all of the elements whose index is between fromIndex, inclusive and toIndex, exclusive."
}