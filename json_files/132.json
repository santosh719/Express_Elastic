{
  "title": "Two-Dimensional Arrays[edit]",
  "content": "Actually, there are no two-dimensional arrays in Java. However, an array can contain any class of object, including an array:Code section 3.56: Two-dimensional arrays.\n\n\n1 String[][] twoDimArray = {{\"a\", \"b\", \"c\", \"d\", \"e\"},\n2                           {\"f\", \"g\", \"h\", \"i\", \"j\"},\n3                           {\"k\", \"l\", \"m\", \"n\", \"o\"}};\n4 \n5 int[][] twoDimIntArray = {{ 0,  1,  2,  3,  4},\n6                           {10, 11, 12, 13, 14},\n7                           {20, 21, 22, 23, 24}};It's not exactly equivalent to two-dimensional arrays because the size of the sub-arrays may vary. The sub-array reference can even be null. Consider:Code section 3.57: Weird two-dimensional array.\n\n\n1 String[][] weirdTwoDimArray = {{\"10\", \"11\", \"12\"},\n2                                null,\n3                                {\"20\", \"21\", \"22\", \"23\", \"24\"}};Note that the length of a two-dimensional array is the number of one-dimensional arrays it contains. In the above example, weirdTwoDimArray.length is 3, whereas weirdTwoDimArray[2].length is 5.In the code section 3.58, we defined an array that has three elements, each element contains an array having 5 elements. We could create the array having the 5 elements first and use that one in the initialize block.Code section 3.58: Included array.\n\n\n1 String[] oneDimArray = {\"00\", \"01\", \"02\", \"03\", \"04\"};\n2 String[][] twoDimArray = {oneDimArray,\n3                           {\"10\", \"11\", \"12\", \"13\", \"14\"},\n4                           {\"20\", \"21\", \"22\", \"23\", \"24\"}};Test your knowledge\n\nQuestion 3.21: Consider the following code:\n\n\n\nQuestion 3.21: The alphabet.\n\n\n1 String[][] alphabet = {{\"a\", \"b\", \"c\", \"d\", \"e\"},\n2                           {\"f\", \"g\", \"h\", \"i\", \"j\"},\n3                           {\"k\", \"l\", \"m\", \"n\", \"o\"},\n4                           {\"p\", \"q\", \"r\", \"s\", \"t\"},\n5                           {\"u\", \"v\", \"w\", \"x\", \"y\"},\n6                           {\"z\"}};\n\n\n\n\nPrint the whole alphabet in the standard output.\n\nAnswer\n\n\n\n\nQuestion 3.21: Answer21.java\n\n\n 1 public class Answer21 {\n 2   public static void main(String[] args) {\n 3     String[][] alphabet = {{\"a\", \"b\", \"c\", \"d\", \"e\"},\n 4                           {\"f\", \"g\", \"h\", \"i\", \"j\"},\n 5                           {\"k\", \"l\", \"m\", \"n\", \"o\"},\n 6                           {\"p\", \"q\", \"r\", \"s\", \"t\"},\n 7                           {\"u\", \"v\", \"w\", \"x\", \"y\"},\n 8                           {\"z\"}};\n 9 \n10     for (int i = 0; i < alphabet.length; i++) {\n11       for (int j = 0; j < alphabet[i].length; j++) {\n12         System.out.println(alphabet[i][j]);\n13       }\n14     }\n15   }\n16 }\n\n\n\n\ni will be the indexes of the main array and j will be the indexes of all the sub-arrays. We have to first iterate on the main array. We have to read the size of the array. Then we iterate on each sub-array. We have to read the size of each array as it may vary. Doing so, we iterate on all the sub-array items using the indexes. All the items will be read in the right order."
}