{
  "title": "JSE code execution[edit]",
  "content": "Java language first edition came out in the client-server era. Thick clients were developed with rich GUI interfaces. Java first edition, JSE (Java Standard Edition) had/has the following in its belt:GUI capabilities (AWT, Swing)\nNetwork computing capabilities (RMI)\nMulti-tasking capabilities (Threads)With JSE the following Java code executions are possible:Figure 1: Stand alone executionStand alone Java application\n(Figure 1) Stand alone application refers to a Java program where both the user interface and business modules are running on the same computer. The application may or may not use a database to persist data. The user interface could be either AWT or Swing.\nThe application would start with a main() method of a Class. The application stops when the main() method exits, or if an exception is thrown from the application to the JVM. Classes are loaded to memory and compiled as needed, either from the file system or from a *.jar file, by the JVM.\nInvocation of Java programs distributed in this manner requires usage of the command line. Once the user has all the class files, he needs to launch the application by the following command line (where Main is the name of the class containing the main() method.)Execution of class\n\njava MainJava 'jar' class libraries\nUtility classes, framework classes, and/or third party classes are usually packaged and distributed in Java ' *.jar' files. These 'jar' files need to be put in the CLASSPATH of the java program from which these classes are going to be used.\nIf a jar file is executable, it can be run from the command line:Execution of archive\n\njava -jar Application.jarFigure 2: Applet ExecutionJava Applet code\n(Figure 2) Java Applets are Java code referenced from HTML pages, by the <APPLET> tag. The Java code is downloaded from a server and runs in the client browser JVM. Java has built-in support to render applets in the browser window.\nSophisticated GUI clients were found hard to develop, mostly because of download time, incompatibilities between browser JVM implementations, and communication requirements back to the server. Applets are rarely used today, and are most commonly used as small, separate graphic-like animation applets. The popularity of Java declined when Microsoft withdrew its Java support from Internet Explorer default configuration, however, the plugin is still available as a free download from java.com.\nMore information can be found about applets at the Applet Chapter, in this book. Also, Wikipedia has an article about Java Applets.Client Server applications\nThe client server applications consist of a front-end, and a back-end part, each running on a separate computer. The idea is that the business logic would be on the back-end part of the program, which would be reused by all the clients. Here the challenge is to achieve a separation between front-end user interface code, and the back-end business logic code.\nThe communication between the front-end and the back-end can be achieved by two ways.\n\n\n\nOne way is to define a data communication protocol between the two tiers. The back-end part would listen for an incoming request. Based on the protocol it interprets the request and sends back the result in data form.\nThe other way is to use Java Remote Invocation (RMI). With the use of RMI, a remote object can be created and used by the client. In this case Java objects are transmitted across the network.\n\n\n\n\nMore information can be found about client-server programming, with sample code, at the Client Server Chapter in this book.Web Applications\nFor applications needed by lots of client installations, the client-server model did not work. Maintaining and upgrading the hundreds or thousands of clients caused a problem. It was not practical. The solution to this problem was to create a unified, standard client, for all applications, and that is the Browser.\nHaving a standard client, it makes sense to create a unified, standard back-end service as well, and that is the Application Server.\nWeb Application is an application that is running in the Application Server, and it can be accessed and used by the Browser client.\nThere are three main area of interest in Web Applications, those are:\n\nThe Web Browser. This is the container of rendering HTML text, and running client scripts\nThe HTTP protocol. Text data are sent back and forth between Browser and the Server\nThe Web server to serve static content, Application server to serve dynamic content and host EJBs.\n\n\nWikipedia also has an article about Web application."
}