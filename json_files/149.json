{
  "title": "Syntax[edit]",
  "content": "The comments in Java use the same syntax as in C++.An end-of-line comment starts with two slashes and ends with the end of the line. This syntax can be used on a single line too.Code section 3.105: Slash-slash comment.\n\n\n1 // A comment to give an example\n2 \n3 int n = 10; // 10 articlesA comment on several lines is framed with '/' + '*' and '*' + '/'.Code section 3.106: Slash-star comment in multiple lines.\n\n\n 1 /*\n 2  * This is a comment\n 3  * on several lines.\n 4  */\n 5 \n 6 /* This also works; slash-star comments may be on a single line. */\n 7 \n 8 /*\n 9 Disable debugging code:\n10 \n11 int a = 10;\n12 while (a-- > 0) System.out.println(\"DEBUG: tab[\"+a+\"]=\" + tab[a]);\n13 */By convention, subsequent lines of slash-star comments begin with a star aligned under the star in the open comment sequence, but this is not required. Never nest a slash-star comment in another slash-star comment. If you accidentally nest such comments, you will probably get a syntax error from the compiler soon after the first star-slash sequence.Code section 3.107: Nested slash-star comment.\n\n\n1 /* This comment appears to contain /* a nested comment. */\n2  * The comment ends after the first star-slash and\n3  * everything after the star-slash sequence is parsed\n4  * as non-comment source.\n5  */If you need to have the sequence */ inside a comment you can use html numeric entities: *&#47;.Slash-star comments may also be placed between any Java tokens, though not recommended:Code section 3.108: Inline slash-star comment.\n\n\n1 int i = /* maximum integer */ Integer.MAX_VALUE;However, comments are not parsed as comments when they occur in string literals.Code section 3.109: String literal.\n\n\n1 String text = \"/* This is not a comment. */\";It results in a 33 character string.Test your knowledge\n\nQuestion 3.26: Consider the following code:\n\n\n\nQuestion 3.26: Commented code.\n\nint a = 0;\n// a = a + 1;\na = a + 1;\n/*\na = a + 1;\n*/\na = a + 1;\n// /*\na = a + 1;\n// */\na = a /*+ 1*/;\na = a + 1; // a = a + 1;\nSystem.out.println(\"a=\" + a);\n\n\n\nWhat is printed in the standard output?\n\nAnswer\n\n\n\n\nOutput for Answer 3.26\n\na=4\n\n\n\n\n\n\nAnswer 3.26: Commented code.\n\n\n 1 int a = 0;\n 2 // a = a + 1;\n 3 a = a + 1;\n 4 /*\n 5 a = a + 1;\n 6 */\n 7 a = a + 1;\n 8 // /*\n 9 a = a + 1;\n10 // */\n11 a = a /*+ 1*/;\n12 a = a + 1; // a = a + 1;\n13 System.out.println(\"a=\" + a);\n\n\n\n\n\nThe highlighted lines are code lines but line 11 does nothing and only the first part of line 12 is code."
}