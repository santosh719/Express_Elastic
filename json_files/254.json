{
  "title": "Choice[edit]",
  "content": "A collection is better when you have to access all the items at once. A map is better when you have to randomly access an item regularly.Before selecting a particular collection implementation, ask the following question:Can my collection contain the same elements, i.e. are duplicates allowed?\nCan my collection contain the null element?\nShould the collection maintain the order of the elements? Is the order important in any way?\nHow do you want to access an element? By index, key or just with an iterator?\nDoes the collection need to be synchronized?\nFrom a performance perspective, which one needs to be faster, updates or reads?\nFrom a usage perspective, which operation will be more frequent, updates or reads?Once you know your needs, you can select an existing implementation. But first decide if you need a Collection, or a Map.Note that the above associations are explicit. The objects them-self do not have any knowledge/information about that they are part in an association. But creating explicit associations between simple java objects is the main idea about using the aggregate/collection classes."
}