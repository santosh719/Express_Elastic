{
  "title": "String Literals[edit]",
  "content": "String literals consist of the double quote character (\") (ASCII 34, hex 0x22), zero or more characters (including Unicode characters), followed by a terminating double quote character (\"), such as: \"Ceci est une string.\"So a string literal follows the following grammar:<STRING :\n        \"\\\"\"\n        (    (~[\"\\\"\",\"\\\\\",\"\\n\",\"\\r\"])\n        |(\"\\\\\"\n            ( [\"n\",\"t\",\"b\",\"r\",\"f\",\"\\\\\",\"'\",\"\\\"\"]\n            |[\"0\"-\"7\"]([\"0\"-\"7\"])?\n            |[\"0\"-\"3\"][\"0\"-\"7\"][\"0\"-\"7\"]\n            )\n        )\n        )*\n        \"\\\"\">Within string and character literals, the backslash character can be used to escape special characters, such as unicode escape sequences, or the following special characters:Name\nCharacter\nASCII\nhex\n\n\nBackspace\n\\b\n8\n0x08\n\n\nTAB\n\\t\n9\n0x09\n\n\nNUL character\n\\0\n0\n0x00\n\n\nnewline\n\\n\n10\n0x0a\n\n\ncarriage control\n\\r\n13\n0xd\n\n\ndouble quote\n\\\"\n34\n0x22\n\n\nsingle quote\n\\'\n39\n0x27\n\n\nbackslash\n\\\\\n92\n0x5cString literals may not contain unescaped newline or linefeed characters. However, the Java compiler will evaluate compile time expressions, so the following String expression results in a string with three lines of text:Code section 3.64: Multi-line string.\n\n\n1 String text = \"This is a String literal\\n\"\n2             + \"which spans not one and not two\\n\"\n3             + \"but three lines of text.\\n\";"
}