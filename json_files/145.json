{
  "title": "Unicode escape sequences[edit]",
  "content": "Unicode characters can also be expressed through Unicode Escape Sequences. Unicode escape sequences may appear anywhere in a Java source file (including inside identifiers, comments, and string literals).Unicode escape sequences consist ofa backslash '\\' (ASCII character 92, hex 0x5c),\na 'u' (ASCII 117, hex 0x75)\noptionally one or more additional 'u' characters, and\nfour hexadecimal digits (the characters '0' through '9' or 'a' through 'f' or 'A' through 'F').Such sequences represent the UTF-16 encoding of a Unicode character. For example, 'a' is equivalent to '\\u0061'. This escape method does not support characters beyond U+FFFF or you have to make use of surrogate pairs.[1]Any and all characters in a program may be expressed in Unicode escape characters, but such programs are not very readable, except by the Java compiler - in addition, they are not very compact.One can find a full list of the characters here.may also be represented in Java as the Unicode escape sequence \\u03C0. Thus, the following is a valid, but not very readable, declaration and assignment:Code section 3.102: Unicode escape sequences for Pi.\n\n\n1 double \\u03C0 = Math.PI;The following demonstrates the use of Unicode escape sequences in other Java syntax:Code section 3.103: Unicode escape sequences in a string literal.\n\n\n1 // Declare Strings pi and quote which contain \\u03C0 and \\u0027 respectively:\n2 String pi = \"\\u03C0\";\n3 String quote = \"\\u0027\";Note that a Unicode escape sequence functions just like any other character in the source code. E.g., \\u0022 (double quote, \") needs to be quoted in a string just like \".Code section 3.104: Double quote.\n\n\n1 // Declare Strings doubleQuote1 and doubleQuote2 which both contain \" (double quote):\n2 String doubleQuote1 = \"\\\"\";\n3 String doubleQuote2 = \"\\\\u0022\"; // \"\\u0022\" doesn't work since \"\"\" doesn't work."
}