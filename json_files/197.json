{
  "title": "Interest[edit]",
  "content": "Static variables can be used as data sharing amongst objects of the same class. For example to implement a counter that stores the number of objects created at a given time can be defined as so:Code listing 1: CountedObject.java\n\n\n 1 public CountedObject {\n 2    private static int counter;\n 3    ...\n 4    public AClass() {\n 5       ...\n 6       counter += 1;\n 7    }\n 8    ...\n 9    public int getNumberOfObjectsCreated() {\n10       return counter;\n11    }\n12 }The counter variable is incremented each time an object is created.Public static variable should not be used, as these become global variables that can be accessed from everywhere in the program. Global constants can be used, however. See below:Code section 3: Constant definition.\n\n\n1 public static final String CONSTANT_VAR = \"Const\";Static methods can be used for utility functions or for functions that do not belong to any particular object. For example:Code listing 2: ArithmeticToolbox.java\n\n\n1 public ArithmeticToolbox {\n2    ...\n3    public static int addTwoNumbers(int firstNumber, int secondNumber) {\n4         return firstNumber + secondNumber;\n5    }\n6 }See also Static methods"
}