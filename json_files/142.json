{
  "title": "Random numbers",
  "content": "Navigate Language Fundamentals topic: (vde)\n\n Statements\n Conditional blocks\n Loop blocks\n Boolean expressions\n Variables\n Primitive Types\n Arithmetic expressions\n Literals\n Methods\n String\n Objects\n Packages\n Arrays\n Mathematical functions\n Large numbers\n Random numbers\n Unicode\n Comments\n Keywords\n Coding conventionsTo generate random numbers the Math.random() method can be used, which returns a double, greater than or equal to 0.0 and less than 1.0.The following code returns a random integer between n and m (where n <= randomNumber < m):Code section 3.30: A random integer.\n\n\n1   int randomNumber = n + (int)(Math.random() * ( m - n ));Alternatively, the java.util.Random class provides methods for generating random booleans, bytes, floats, ints, longs and 'Gaussians' (doubles from a normal distribution with mean 0.0 and standard deviation 1.0). For example, the following code is equivalent to that above:Code section 3.31: A random integer with Gaussian.\n\n\n1   Random random = new Random();\n2   int randomNumber = n + random.nextInt(m - n);As an example using random numbers, we can make a program that uses a Random object to simulate flipping a coin 20 times:Code listing 3.25: CoinFlipper.java\n\n\n 1 import java.util.Random;\n 2 \n 3 public class CoinFlipper {\n 4 \n 5   public static void main(String[] args) {\n 6     // The number of times to flip the coin\n 7     final int TIMES_TO_FLIP = 20;\n 8     int heads = 0;\n 9     int tails = 0;\n10     // Create a Random object\n11     Random random = new Random();\n12     for (int i = 0; i < TIMES_TO_FLIP; i++) {\n13       // 0 or 1\n14       int result = random.nextInt(2);\n15       if (result == 1) {\n16         System.out.println(\"Heads\");\n17         heads++;\n18       } else {\n19         System.out.println(\"Tails\");\n20         tails++;\n21       }\n22     }\n23     System.out.println(\"There were \"\n24             + heads\n25             + \" heads and \"\n26             + tails\n27             + \" tails\");\n28   }\n29 }\n\n\n\n\n\n\n\n\n\nPossible output for code listing 3.25\n\nHeads\nTails\nTails\nTails\nHeads\nTails\nHeads\nHeads\nHeads\nHeads\nHeads\nHeads\nTails\nTails\nTails\nTails\nHeads\nTails\nTails\nTails\nThere were 9 heads and 11 tailsOf course, if you run the program you will probably get different results."
}