{
  "title": "Concatenation[edit]",
  "content": "The Java language provides special support for the string concatenation with operator +:Code section 3.84: Examples of concatenation.\n\n\n1 System.out.println(\"First part\");\n2 System.out.println(\" second part\");\n3 String str = \"First part\" + \" second part\";\n4 System.out.println(str);\n\n\n\n\n\n\n\n\n\nOutput for Code section 3.84\n\nFirst part\n second part\nFirst part second partThe concatenation is not always processed at the same time. Raw string literals concatenation is done at compile time, hence there is a single string literal in the byte code of the class. Concatenation with at least one object is done at runtime.+ operator can concatenate other objects with strings. For instance, integers will be converted to strings before the concatenation:Code section 3.85: Concatenation of integers.\n\n\n1 System.out.println(\"Age=\" + 25);\n\n\n\n\n\n\n\n\n\nOutput for Code section 3.85\n\nAge=25Each Java object has the String toString() inherited from the Object class. This method provides a way to convert objects into Strings. Most classes override the default behavior to provide more specific (and more useful) data in the returned String:Code section 3.86: Concatenation of objects.\n\n\n1 System.out.println(\"Age=\" + new Integer(31));\n\n\n\n\n\n\n\n\n\nOutput for Code section 3.86\n\nAge=31"
}