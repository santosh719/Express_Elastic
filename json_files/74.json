{
  "title": "Labels[edit]",
  "content": "Labels can be used to give a name to a loop. The reason to do this is so we can break out of or continue with upper-level loops from a nested loop.Here is how to label a loop:label name:loopTo break out of or continue with a loop, use the break or continue keyword followed by the name of the loop.For example:Code section 3.36: A double for loop.\n\n\n 1 int i, j;\n 2 int[][] nums = {\n 3     {1, 2, 5},\n 4     {6, 9, 7},\n 5     {8, 3, 4}\n 6 };\n 7 \n 8 Outer:\n 9 for (i = 0; i < nums.length; i++) {\n10     for (j = 0; j < nums[i].length; j++) {\n11         if (nums[i][j] == 9) {\n12             System.out.println(\"Found number 9 at (\" + i + \", \" + j + \")\");\n13             break Outer;\n14         }\n15     }\n16 }\n\n\n\n\n\n\n\n\n\nOutput for code section 3.36\n\nFound number 9 at (1, 1)You needn't worry if you don't understand all the code, but look at how the label is used to break out of the outer loop from the inner loop. However, as such a code is hard to read and maintain, it is highly recommended not to use labels."
}