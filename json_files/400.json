{
  "title": "Panel[edit]",
  "content": "The main benefit of the layouts is that you can combine them one into another and you can do that with a panel. A panel is a component that has other components inside. A panel can then be added to the top component (frame or applet) or to another panel and be placed itself as defined by layout and constraints of this parent component. It has its own layout and is normally used to place a group of related components like buttons, for instance:Figure 9.16: Java applet example.Test your knowledge\n\nQuestion 9.5: We want to create a basic FTP (File Transfer Protocol) software which looks like this:\n\n\nApplication name\n\n\n\n\n\nTool\n\n\n\n\nTool\n\n\n\n\nTool\n\n\n\n\nTool\n\n\n\n\nTool\n\n\n\n\nTool\n\n\n\n\nTool\n\n\n\n\nTool\n\n\n\n\nTool\n\n\n\n\n\n\n\n\nLocal folder\n\n\n\n\n\n\n\n\n\n\nRemote folder\n\n\n\n\n\n\n\n\n\nStatus bar\n\n\nOn the top, it should display the name of the software. Under the name, it should display tool buttons that are displayed from the left to the right and the sequence of buttons is wrapped if it reaches the right border. Under the buttons, it should display two lists of files. The widths of these two lists should be the same and they should use all the width of the application. Under these two lists, it should display a status bar.\nCreate this display on an applet.\n\nAnswer\n\nFirst, we have to analyze the display. We have four separate areas of components:\n\nThe name area\nThe tool area\nThe folder area\nThe status area\n\nSo we have to first separate these areas and then we will split these areas into components.\n\n\n\nAnswer 9.5: Answer5.java\n\n\n 1 import java.applet.Applet;\n 2 import java.awt.BorderLayout;\n 3 import java.awt.Button;\n 4 import java.awt.FlowLayout;\n 5 import java.awt.GridLayout;\n 6 import java.awt.Label;\n 7 import java.awt.Panel;\n 8 \n 9 public class Answer5 extends Applet {\n10 \n11     Label applicationNameLabel = new Label(\"Wikibooks FTP\");\n12     Button tool1Button = new Button(\"Tool\");\n13     Button tool2Button = new Button(\"Tool\");\n14     Button tool3Button = new Button(\"Tool\");\n15     Button tool4Button = new Button(\"Tool\");\n16     Button tool5Button = new Button(\"Tool\");\n17     Button tool6Button = new Button(\"Tool\");\n18     Button tool7Button = new Button(\"Tool\");\n19     Button tool8Button = new Button(\"Tool\");\n20     Button tool9Button = new Button(\"Tool\");\n21     Label localFolderLabel = new Label(\"5 files\");\n22     Label remoteFolderLabel = new Label(\"3 files\");\n23     Label statusBarLabel = new Label(\"Available\");\n24 \n25     /**\n26      * Init.\n27      */\n28     public void init() {\n29         setLayout(new BorderLayout());\n30 \n31         // The application name\n32         add(applicationNameLabel, BorderLayout.NORTH);\n33 \n34         // The center\n35         Panel centerPanel = new Panel();\n36         centerPanel.setLayout(new BorderLayout());\n37 \n38         // The buttons\n39         Panel buttonPanel = new Panel();\n40         buttonPanel.setLayout(new FlowLayout(FlowLayout.LEFT));\n41         buttonPanel.add(tool1Button);\n42         buttonPanel.add(tool2Button);\n43         buttonPanel.add(tool3Button);\n44         buttonPanel.add(tool4Button);\n45         buttonPanel.add(tool5Button);\n46         buttonPanel.add(tool6Button);\n47         buttonPanel.add(tool7Button);\n48         buttonPanel.add(tool8Button);\n49         buttonPanel.add(tool9Button);\n50         centerPanel.add(buttonPanel, BorderLayout.CENTER);\n51 \n52         // The local and remote folders\n53         Panel folderPanel = new Panel();\n54         folderPanel.setLayout(new GridLayout(0, 2, 2, 2));\n55         folderPanel.add(localFolderLabel);\n56         folderPanel.add(remoteFolderLabel);\n57         centerPanel.add(folderPanel, BorderLayout.SOUTH);\n58 \n59         add(centerPanel, BorderLayout.CENTER);\n60 \n61         // The status bar\n62         add(statusBarLabel, BorderLayout.SOUTH);\n63     }\n64 }\n\n\n\n\n\nThe totality of the components is put in a border layout so that we have three vertical areas of elements.\nThe area in the north is the area of the title.\nThe area in the center contains the buttons and the folders and will be split later.\nThe area in the south is the area of the status bar.\nThe area in the center is now split with a border layout into a button area in the center and a folder area in the south.\nThe button area is then split with a flow layout.\nThe folder area is now split with a grid layout.\n\n\nWe use a grid layout to display the folders to have the same width between the two components. We can't use a grid layout to separate the name, the buttons, the folders and the status bar as these areas have not the same height. The buttons must be at the center of the border layout as the number of row of buttons would be badly calculated and the last rows of buttons would not appear."
}