{
  "title": "BigInteger[edit]",
  "content": "The BigInteger class represents integers of almost any size. As with other objects, they need to be constructed. Unlike regular numbers, the BigInteger represents an immutable object - methods in use by the BigInteger class will return a new copy of a BigInteger.To instantiate a BigInteger, you can create it from either byte array, or from a string. For example:Code section 3.23: 1 quintillion, or 10^18. Too large to fit in a long.\n\n\n1 BigInteger i = new BigInteger(\"1000000000000000000\");BigInteger cannot use the normal Java operators. They use the methods provided by the class.Code section 3.24: Multiplications and an addition.\n\n\n1 BigInteger a = new BigInteger(\"3\");\n2 BigInteger b = new BigInteger(\"4\");\n3 \n4 // c = a^2 + b^2\n5 BigInteger c = a.multiply(a).add(b.multiply(b));It is possible to convert to a long, but the long may not be large enough.Code section 3.25: Conversion.\n\n\n1 BigInteger aBigInteger = new BigInteger(\"3\");\n2 long aLong = aBigInteger.longValue();"
}