{
  "title": "J2EE code execution[edit]",
  "content": "As the focus was shifting from reaching GUI clients to thin client applications, with Java version 2, Sun introduced J2EE (Java 2 Extended Edition). J2EE added:Components Base Architecture, (Servlet, JSP, EJB Containers)With J2EE the following Java component executions are possible:Figure 3: Servlet ExecutionJava Servlet code\n(Figure 3) Java got its popularity with server side programming, more specifically with J2EE servlets. Servlets are running in a simple J2EE framework to handle client HTTP requests. They are meant to replace CGI programming for web pages rendering dynamic content.\nThe servlet is running in a so called servlet-container/web container. The servlet's responsibility is to:\n\nHandle the request by doing the business logic computation,\nConnecting to a database if needed,\nCreate HTML to present to the user through the browser\n\n\nThe HTML output represents both the presention logic and the results of the business computations. This represents a huge problem, and there is no real application relying only on servlets to handle the presention part of the responsibility. There are two main solutions to this:\n\nUse a template tool (Store the presentation part in an HTML file, marking the areas that need to be replaced after business logic computations).\nUse JSP (See next section)\n\n\nWikipedia also has an article about Servlets.Figure 4: Jsp ExecutionJava Server Pages (JSP) code\n(Figure 4) JSP is an HTML file with embedded Java code inside. The first time the JSP is accessed, the JSP is converted to a Java Servlet. This servlet outputs HTML which has inside the result of the business logic computation. There are special JSP tags that helps to add data dynamically to the HTML. Also JSP technology allows to create custom tags.\nUsing the JSP technology correctly, business logic computations should not be in the embedded Java part of the JSP. JSP should be used to render the presentation of the static and dynamic data. Depending on the complexity of the data, 100% separation is not easy to achieve. Using custom tags, however may help to get closer to 100%. This is advocated also in MVC architecture (see below).Figure 5: EJB ExecutionEJB code\n(Figure 5) In the 1990s, with the client server computing, a trend started, that is to move away from Mainframe computing. That resulted in many small separate applications in a Company/Enterprise. Many times the same data was used in different applications. A new philosophy, \"Enterprise Computing\", was created to address these issues. The idea was to create components that can be reused throughout the Enterprise. The Enterprise Java Beans (EJBs) were supposed to address this.\nAn EJB is an application component that runs in an EJB container. The client accesses the EJB modules through the container, never directly. The container manages the life cycle of the EJB modules, and handles all the issues that arise from network/enterpise computing. Some of those are security/access control, object pooling, transaction management, ... .\nEJBs have the same problems as any reusable code: they need to be generic enough to be able to be reused and the changes or maintenance of EJBs can affect existing clients. Many times EJBs are used unnecessarily when they are not really needed. An EJB should be designed as a separate application in the enterprise, fulfilling one function.Figure 6: MVC ExecutionCombine J2EE components to create an MVC architecture\nThis leads us to the three layers/tiers as shown in (Figure 6).\nIn modern web applications, with lots of static data and nice graphics, how the data is presented to the user became very important and usually needs the help of a graphic artist.\nTo help programmers and graphic artists to work together, the separation between data, code, and how it is presented became crucial.\n\n\nThe view (User Interface Logic) contains the logic that is necessary to construct the presentation. This could be handled by JSP technology.\nThe servlet acts as the controller and contains the logic that is necessary to process user events and to select an appropriate response.\nThe business logic (model) actually accomplishes the goal of the interaction. This might be a query or an update to a database. This could be handled by EJB technology.\n\n\nFor more information about MVC, please see MVC."
}