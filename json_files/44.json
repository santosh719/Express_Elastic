{
  "title": "Whitespace[edit]",
  "content": "Whitespace in Java is used to separate the tokens in a Java source file. Whitespace is required in some places, such as between access modifiers, type names and Identifiers, and is used to improve readability elsewhere.Wherever whitespace is required in Java, one or more whitespace characters may be used. Wherever whitespace is optional in Java, zero or more whitespace characters may be used.Java whitespace consists of thespace character ' ' (0x20),\nthe tab character (hex 0x09),\nthe form feed character (hex 0x0c),\nthe line separators characters newline (hex 0x0a) or carriage return (hex 0x0d) characters.Line separators are special whitespace characters in that they also terminate line comments, whereas normal whitespace does not.Other Unicode space characters, including vertical tab, are not allowed as whitespace in Java.Required Whitespace[edit]Look at the static method intValue:Code section 2.13: Method declaration\n\n\n1 private static int intValue(String data) {\n2   return Integer.parseInt(data);\n3 }Whitespace is required between private and static, between static and int, between int and intValue, and between String and data.If the code is written like this:Code section 2.14: Collapsed code\n\n\n1 privatestaticint intValue(String data) {\n2   return Integer.parseInt(data);\n3 }...it means something completely different: it declares a method which has the return type privatestaticint It is unlikely that this type exists and the method is no longer static, so the above would result in a semantic error."
}