{
  "title": "Using bitwise operators within Java[edit]",
  "content": "Java has besides arithmetic operators a set of bit operators to manipulate the bits in a number, and a set of logical operators. The bitwise logical operators areOperator\nFunction\nValue of\nx before\nExample\ninput\nExample\noutput\nValue of\nx after\n\n\n&\nBitwise AND\n7\nx&27\n3\n7\n\n\n|\nBitwise OR\n7\nx|27\n31\n7\n\n\n^\nBitwise XOR\n7\nx^27\n28\n7\n\n\n~\nBitwise inversion\n7\n~x\n-8\n7Besides these logical bitwise functions, there are also operators to assign numbers to variables (x = -5):Operator\nFunction\nExample\ninput\nExample output\n\n\n&=\nAssign x bitwisely ANDed with another value to itself\nx &= 3\n3\n\n\n|=\nAssign x bitwisely ORed with another value to itself\nx |= 3\n-5\n\n\n^=\nAssign x bitwisely XORed with another value to itself\nx ^= 3\n-8\n\n\n<<=\nAssign x divided by another integer to itself\nx <<= 1\n-10\n\n\n>>=\nAssign x bitwisely negated with another value to itself\nx >>= 1\n-3\n\n\n>>>=\nAssign x bitwisely negated with another value to itself\nx >>>= 1\n2,305,843,009,213,693,949 (64 bit)The shift operators are used to shift the bits to the left or right, which is also a quick way to multiply/divide by two:Operator\nFunction\nValue of\nx before\nExample\ninput\nExample output\nValue of\nx after\n\n\n<<\nLogical shift left\n-15\nx << 2\n-60\n-15\n\n\n>>\nArithmetic shift right\n-15\nx >> 3\n-2\n-15\n\n\n>>>\nLogical shift right\n-15\nx >>> 3\n2,305,843,009,213,693,937 (64 bit)\n-15"
}