{
  "title": "HelloWorld[edit]",
  "content": "Code listing 10.1: HelloWorld.java\n\n\n 1 public class HelloWorld {\n 2  private native void print();\n 3 \n 4  public static void main(String[] args) {\n 5   new HelloWorld().print();\n 6  }\n 7 \n 8  static {\n 9   System.loadLibrary(\"HelloWorld\");\n10  }\n11 }HelloWorld.h/* DO NOT EDIT THIS FILE - it is machine generated */\n#include <jni.h>\n/* Header for class HelloWorld */\n\n#ifndef _Included_HelloWorld\n#define _Included_HelloWorld\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n/*\n * Class:     HelloWorld\n * Method:    print\n * Signature: ()V\n */\nJNIEXPORT void JNICALL Java_HelloWorld_print\n  (JNIEnv *, jobject);\n\n#ifdef __cplusplus\n}\n#endif\n#endiflibHelloWorld.c#include <stdio.h>\n #include \"HelloWorld.h\"\n\n JNIEXPORT void JNICALL\n Java_HelloWorld_print(JNIEnv *env, jobject obj)\n {\n     printf(\"Hello World!\\n\");\n     return;\n }make.sh#!/bin/sh\n\n# openbsd 4.9\n# gcc 4.2.1\n# openjdk 1.7.0\nJAVA_HOME=$(readlink -f /usr/bin/javac | sed \"s:bin/javac::\")\nexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:.\njavac HelloWorld.java\njavah HelloWorld\ngcc -I${JAVA_HOME}/include -shared libHelloWorld.c -o libHelloWorld.so\njava HelloWorldCommands to execute on POSIX\n\nchmod +x make.sh\n./make.sh"
}